<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://code.alibabatech.com/schema/dubbo
       http://code.alibabatech.com/schema/dubbo/dubbo.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

       <context:component-scan base-package="org.dubbo.provider"/>
       
       <!--应用配置	用于配置当前应用信息，不管该应用是提供者还是消费者-->
       <dubbo:application name="dubboapi" logger="slf4j"/>

       <!--注册中心配置	用于配置连接注册中心相关信息
       register：true|false 是否注册
       subscribe： true|false 是否订阅
       dynamic：true|false 是否动态管理
       多注册中心
       -->
       <dubbo:registry id="localregister" address="zookeeper://localhost:2181"/>
       <dubbo:registry id="remoteregister" address="zookeeper://localhost:2181"/>

       <!--协议配置	用于配置提供服务的协议信息，协议由提供方指定，消费方被动接受 -->
       <dubbo:protocol name="hessian" id="hp" port="20881" keepalive="false" serialization="kyro"/>
       <dubbo:protocol name="dubbo" id="dp" port="20880"/>

       <!--提供方配置	当 ProtocolConfig 和 ServiceConfig 某属性没有配置时，采用此缺省值，可选
       retries: 失败重试，
       cluster：集群容错模式，
       loadBalance: 负载均衡策略 random roundrobin leastactive consisthash
       threadpool: 线程池 fiexd, cached, limited
       dispather: 请求分发 all direct message execution
       -->
       <dubbo:provider protocol="dubbo" dispather="all" retries="3" threadpool="fixed" threads="10" filter="myLogFilter" cluster="failfast" loadbalance="roundrobin"/>

       <!--服务配置	用于暴露一个服务，定义服务的元信息，一个服务可以用多个协议暴露，一个服务也可以注册到多个注册中心-->
       <dubbo:service protocol="dp" group="dev" registry="localregister" interface="org.dubbo.common.HelloDubboService" ref="helloSvr" version="1.0.0"/>
       <dubbo:service protocol="hp" group="dev" registry="localregister" interface="org.dubbo.common.UpgradeDubboService" ref="downSvr" version="1.0.0"/>

       <dubbo:service protocol="dp" group="prod" registry="remoteregister" interface="org.dubbo.common.HelloDubboService" ref="helloSvr" version="1.0.0"/>
       <dubbo:service protocol="hp" group="prod" registry="remoteregister" interface="org.dubbo.common.UpgradeDubboService" ref="downSvr" version="1.0.0"/>

       <!--回调函数-->
       <bean id ="callbackService" class = "org.dubbo.provider.callback.CallbackServiceImpl" />

       <dubbo:service interface="org.dubbo.common.callback.CallbackService" ref="callbackService"
                      connections="1" callbacks="1000">
              <dubbo:method name="addListener">
                     <dubbo:argument index="1" callback="true"/>
                     <!--<dubbo:argument type="com.demo.CallbackListener" callback="true" />-->
              </dubbo:method>
       </dubbo:service>

       <!--事件通知-->
       <dubbo:service interface="org.dubbo.common.TestNotifyService" ref="testNotifyService"/>
</beans>